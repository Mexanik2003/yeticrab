{"version":3,"sources":["components/MySelect/MySelect.tsx","components/TaskListPanel/TaskListPanel.tsx","components/TaskListContainer/TaskListContainer.tsx","middleware/api.tsx","components/Tasks/Tasks.tsx","components/NavPanel/NavPanel.tsx","components/App/App.tsx","reportWebVitals.js","index.js"],"names":["MySelect","forwardRef","props","ref","items","map","item","index","disabled","value","text","TaskListPanel","columnRef","useRef","operatorRef","valueRef","id","className","onSubmit","event","preventDefault","newFilter","column","current","operator","console","log","changeFilter","type","placeholder","onClick","onChange","e","s","target","changeSearchVal","TaskListContainer","tasks","useState","editingTask","setEditingTask","sort","a","b","sign","filter","asc","task","toString","indexOf","search","date","name","carrier","tel","ATICode","setSort","dataset","changeSort","onEditBtnClick","submitEditForm","elements","saveTask","onPressDeleteBtn","deleteTask","closeEditForm","scope","href","colSpan","defaultValue","comments","comment","adminFlag","process","SERVER","Tasks","setFilter","setTasks","length","params","isAdmin","newTask","find","push","NavPanel","btnText","setAdminFlag","App","setAdmin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","dotenv","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAWMA,EAAWC,sBAAW,SAACC,EAAcC,GAEvC,OACI,wBAAQA,IAAKA,EAAb,SAEQD,EAAME,MAAMC,KAAI,SAACC,EAAKC,GAAN,OACZ,wBAAQC,SAAUF,EAAKE,SAAsBC,MAAOH,EAAKG,MAAzD,SACKH,EAAKI,MAD4BH,WCkE3CI,MA3Ef,SAAuBT,GACnB,IAAIU,EAAYC,iBAAiC,MAC7CC,EAAcD,iBAAiC,MAC/CE,EAAWF,iBAAgC,MAiC/C,OACI,8BACI,uBAAMG,GAAG,aAAaC,UAAU,OAAOC,SAhC/C,SAAqBC,GAGjB,GAFAA,EAAMC,iBAEFR,GAAaE,GAAeC,EAAU,CAAC,IAAD,YAClCM,EAAY,CACZC,QAAQ,UAAAV,EAAUW,eAAV,eAAmBd,OAAnB,UAA2BG,EAAUW,eAArC,aAA2B,EAAmBd,MAAQ,GAC9De,UAAU,UAAAV,EAAYS,eAAZ,eAAqBd,OAArB,UAA6BK,EAAYS,eAAzC,aAA6B,EAAqBd,MAAQ,GACpEA,OAAO,UAAAM,EAASQ,eAAT,eAAkBd,OAAlB,UAA0BM,EAASQ,eAAnC,aAA0B,EAAkBd,MAAQ,IAE/DgB,QAAQC,IAAIL,GACZnB,EAAMyB,aAAaN,KAsBnB,UACI,cAACrB,EAAD,CACI4B,KAAK,SACLxB,MAAO,CACH,CAACK,MAAO,IAAKC,KAAM,mDAAiBF,UAAU,GAC9C,CAACC,MAAO,KAAMC,KAAM,KAAMF,UAAU,GACpC,CAACC,MAAO,OAAQC,KAAM,2BAAQF,UAAU,GACxC,CAACC,MAAO,OAAQC,KAAM,mDAAYF,UAAU,GAC5C,CAACC,MAAO,UAAWC,KAAM,+DAAcF,UAAU,GACjD,CAACC,MAAO,MAAOC,KAAM,6CAAWF,UAAU,GAC1C,CAACC,MAAO,UAAWC,KAAM,UAAWF,UAAU,IAGlDL,IAAKS,IAET,cAACZ,EAAD,CACI4B,KAAK,SACLxB,MAAO,CACH,CAACK,MAAO,IAAKC,KAAM,yDAAkBF,UAAU,GAC/C,CAACC,MAAO,IAAKC,KAAM,iCAASF,UAAU,GACtC,CAACC,MAAO,IAAKC,KAAM,mDAAYF,UAAU,GACzC,CAACC,MAAO,IAAKC,KAAM,uCAAUF,UAAU,GACvC,CAACC,MAAO,IAAKC,KAAM,uCAAUF,UAAU,IAG3CL,IAAKW,IAET,uBAAOX,IAAKY,EAAUa,KAAK,OAAOC,YAAY,gGAC9C,wBAAQD,KAAK,SAAb,kDACA,wBAAQA,KAAK,QAAQE,QA/CjC,SAAmBX,GACfA,EAAMC,iBACNlB,EAAMyB,aAAa,CACfL,OAAQ,GACRE,SAAU,GACVf,MAAO,MA0CH,8DAA0D,uBA7B9D,mCA8BW,uBAAOmB,KAAK,OAAOG,SAtCtC,SAA6BC,GACzB,IAAIC,EAAWD,EAAEE,OAAOzB,MACxBP,EAAMiC,gBAAgBF,IAoC2CJ,YAAY,wECkFtEO,MAlJf,SAA2BlC,GACvB,IAAImC,EAAQnC,EAAMmC,MAClB,EAAsCC,oBAAkB,GAAxD,mBAAOC,EAAP,KAAoBC,EAApB,KAkBA,GAhBAH,EAAMI,MAAK,SAACC,EAAEC,GACV,IAAIC,EAAO1C,EAAM2C,OAAOJ,KAAKK,IAAM,GAAK,EACpCxB,EAAiBpB,EAAM2C,OAAOJ,KAAKnB,OAEvC,OAAIoB,EAAEpB,GAAUqB,EAAErB,GACP,EAAEsB,EAGLF,EAAEpB,GAAUqB,EAAErB,IACN,EAAEsB,EAEH,KAKgB,MAA/B1C,EAAM2C,OAAOA,OAAOvB,QAAmD,MAAjCpB,EAAM2C,OAAOA,OAAOrB,UAAoBtB,EAAM2C,OAAOA,OAAOpC,MAAO,CACzG,MAAgCP,EAAM2C,OAAOA,OAAxCvB,EAAL,EAAKA,OAAQE,EAAb,EAAaA,SAAUf,EAAvB,EAAuBA,MACvB4B,EAAQA,EAAMQ,QAAO,SAAAE,GACjB,MAAiB,MAAbvB,EAEQuB,EAAKzB,GAAQ0B,aAAevC,EAChB,MAAbe,EAEAuB,EAAKzB,GAAQ0B,WAAWC,QAAQxC,IAAU,EAC7B,MAAbe,GAEEuB,EAAKzB,IAAWb,EACL,MAAbe,GAEEuB,EAAKzB,IAAWb,OAFtB,KAOf,GAAIP,EAAM2C,OAAOK,OAAQ,CACrB,IAAIjB,EAAI/B,EAAM2C,OAAOK,OACrBb,EAAQA,EAAMQ,QAAO,SAAAE,GAAI,OACrBA,EAAK/B,GAAGgC,WAAWC,QAAQhB,IAAM,GAC9Bc,EAAKI,KAAKH,WAAWC,QAAQhB,IAAM,GACnCc,EAAKK,KAAKJ,WAAWC,QAAQhB,IAAM,GACnCc,EAAKM,QAAQL,WAAWC,QAAQhB,IAAM,GACtCc,EAAKO,IAAIN,WAAWC,QAAQhB,IAAM,GAClCc,EAAKQ,QAAQP,WAAWC,QAAQhB,IAAM,KAKjD,SAASuB,EAAQxB,GACbA,EAAEZ,iBACEY,EAAEE,OAAOuB,QAAQL,MACjBlD,EAAMwD,WAAW1B,EAAEE,OAAOuB,QAAQL,MAI1C,SAASO,EAAe3B,GACpBQ,GAAgBR,EAAEE,OAAOuB,QAAQzC,IAGrC,SAAS4C,EAAe5B,GACpBA,EAAEZ,iBACFK,QAAQC,IAAIM,EAAEE,OAAO2B,UACrB3D,EAAM4D,SAAN,2BACOzB,EAAML,EAAEE,OAAO2B,SAAStD,MAAME,QADrC,IAEI0C,KAAMnB,EAAEE,OAAO2B,SAASV,KAAK1C,MAC7B2C,KAAMpB,EAAEE,OAAO2B,SAAST,KAAK3C,MAC7B4C,QAASrB,EAAEE,OAAO2B,SAASR,QAAQ5C,MACnC6C,IAAKtB,EAAEE,OAAO2B,SAASP,IAAI7C,MAC3B8C,QAASvB,EAAEE,OAAO2B,SAASN,QAAQ9C,SAEvC+B,GAAgB,GAGpB,SAASuB,EAAiB/B,GACtBA,EAAEZ,iBACFlB,EAAM8D,WAAN,eACO3B,EAAML,EAAEE,OAAOuB,QAAQlD,SAC9BiC,GAAgB,GAGpB,SAASyB,EAAcjC,GACnBA,EAAEZ,iBACFoB,GAAgB,GAIpB,OACI,8BACI,kCACI,gCACI,+BACI,oBAAI0B,MAAM,MAAV,SAAgB,mBAAGC,KAAK,IAAIrC,QAAS0B,EAAS,YAAU,KAAxC,kBAChB,oBAAIU,MAAM,MAAV,SAAgB,mBAAGC,KAAK,IAAIrC,QAAS0B,EAAS,YAAU,OAAxC,wCAChB,oBAAIU,MAAM,MAAV,SAAgB,mBAAGC,KAAK,IAAIrC,QAAS0B,EAAS,YAAU,OAAxC,gEAChB,oBAAIU,MAAM,MAAV,SAAgB,mBAAGC,KAAK,IAAIrC,QAAS0B,EAAS,YAAU,UAAxC,4EAChB,oBAAIU,MAAM,MAAV,SAAgB,mBAAGC,KAAK,IAAIrC,QAAS0B,EAAS,YAAU,MAAxC,0DAChB,oBAAIU,MAAM,MAAV,SAAgB,mBAAGC,KAAK,IAAIrC,QAAS0B,EAAS,YAAU,WAAxC,kFAChB,oBAAIU,MAAM,MAAV,SAAgB,mBAAGC,KAAK,IAAIrC,QAAS0B,EAAS,YAAU,UAAxC,sCAChB,oBAAIU,MAAM,MAAV,iDAGR,gCACK7B,EAAMhC,KAAI,SAAC0C,EAAKxC,GAAN,OACPwC,EAAK/B,MAAQuB,EACT,6BACI,oBAAI6B,QAAS,EAAb,SACI,uBAAMlD,SAAU0C,EAAhB,UACI,uBAAOhC,KAAK,OAAOwB,KAAK,QAAQiB,aAAc9D,EAAOC,UAAU,IAC/D,uBAAOoB,KAAK,OAAOwB,KAAK,OAAOiB,aAActB,EAAKI,OAClD,uBAAOvB,KAAK,OAAOwB,KAAK,OAAOiB,aAActB,EAAKK,OAClD,uBAAOxB,KAAK,OAAOwB,KAAK,UAAUiB,aAActB,EAAKM,UACrD,uBAAOzB,KAAK,OAAOwB,KAAK,MAAMiB,aAActB,EAAKO,MACjD,uBAAO1B,KAAK,OAAOwB,KAAK,UAAUiB,aAActB,EAAKQ,UACrD,wBAAQ3B,KAAK,SAAb,oEAAwC,wBAAQE,QAASmC,EAAjB,8DAT3C1D,GAcb,+BACI,6BAAKwC,EAAK/B,KACV,6BAAK+B,EAAKI,OACV,6BAAKJ,EAAKK,OACV,6BAAKL,EAAKM,UACV,6BAAKN,EAAKO,MACV,6BAAKP,EAAKuB,SAASjE,KAAI,SAACkE,EAAQhE,GAAT,OAAmB,4BAAgCgE,GAAhC,UAAWxB,EAAK/B,GAAhB,YAAsBT,SAChE,6BAAKwC,EAAKQ,UACV,6BAAKrD,EAAMsE,UACP,gCACI,wBAAQ1C,QAAS6B,EAAgB,UAASZ,EAAK/B,GAA/C,8DACA,wBAAQc,QAASiC,EAAkB,aAAYxD,EAA/C,2DAEA,OAbHA,cCjI3B8B,GAFSoC,mIAAYC,OAEN,CACjB,CACI1D,GAAI,EACJmC,KAAM,mBACNC,KAAM,gEACNC,QAAS,iHACTC,IAAK,cACLgB,SAAU,CAAC,8CAAY,8CAAY,+CACnCf,QAAS,MAEb,CACIvC,GAAI,EACJmC,KAAM,mBACNC,KAAM,sEACNC,QAAS,iHACTC,IAAK,cACLgB,SAAU,CAAC,8CAAY,8CAAY,+CACnCf,QAAS,MAEb,CACIvC,GAAI,EACJmC,KAAM,mBACNC,KAAM,gEACNC,QAAS,iHACTC,IAAK,cACLgB,SAAU,CAAC,8CAAY,8CAAY,+CACnCf,QAAS,MAEb,CACIvC,GAAI,GACJmC,KAAM,mBACNC,KAAM,oDACNC,QAAS,mIACTC,IAAK,cACLgB,SAAU,CAAC,8CAAY,8CAAY,+CACnCf,QAAS,QCuEFoB,MAlGf,SAAezE,GAEX,MAA4BoC,mBACxB,CACIO,OAAQ,CACJvB,OAAQ,GACRE,SAAU,GACVf,MAAO,IAEXgC,KAAM,CACFnB,OAAQ,OACRwB,KAAK,GAETI,OAAQ,KAXhB,mBAAOL,EAAP,KAAe+B,EAAf,KAeA,EAA0BtC,mBDgBnBD,GChBP,mBAAOA,EAAP,KAAcwC,EAAd,KA4DA,OACI,gCACI,sGAAkBxC,EAAMyC,UACxB,cAAC,EAAD,CACInD,aAxDZ,SAAsBoD,GAClBH,EAAS,2BAEE/B,GAFF,IAGDA,OAAQkC,MAqDR5C,gBAlCZ,SAAyBF,GACrB2C,EAAS,2BAEE/B,GAFF,IAGDK,OAAQjB,QAiCZ,cAAC,EAAD,CACIY,OAAQA,EACRR,MAAOA,EACP2C,SAAS,EACTtB,WAtDZ,SAAoBpC,GAChBsD,EAAU,2BAEC/B,GAFF,IAGDJ,KAAM,CACFnB,OAAQA,EACRwB,IAAKxB,IAAWuB,EAAOJ,KAAKnB,SAAUuB,EAAOJ,KAAKK,SAiDtD0B,UAAWtE,EAAMsE,UACjBV,SAlCZ,SAAkBf,GAEd,IAAIkC,EAAU5C,EAAM6C,MAAK,SAAA5E,GAAI,OAAIA,EAAKU,KAAO+B,EAAK/B,MAC9CiE,IACA5C,EAAM8C,KAAKpC,GACX8B,EAASxC,EAAMQ,QAAO,SAAAvC,GAAI,OAAIA,IAAS2E,QA8BnCjB,WA1BZ,SAAoBjB,GAEEV,EAAM6C,MAAK,SAAA5E,GAAI,OAAIA,EAAKU,KAAO+B,EAAK/B,OAE9C6D,EAASxC,EAAMQ,QAAO,SAAAvC,GAAI,OAAIA,EAAKU,IAAM+B,EAAK/B,cCjE/CoE,MAbf,SAAkBlF,GAMd,IAAImF,EAAUnF,EAAMsE,UAAY,6HAA2B,+FAE3D,OAAO,8BACH,wBAAQ1C,QARZ,SAAyBE,GACrBA,EAAEZ,iBACFlB,EAAMoF,gBAMN,SAAmCD,OCgB5BE,MAzBf,WACI,MAA8BjD,oBAAS,GAAvC,mBAAOkC,EAAP,KAAkBgB,EAAlB,KAMA,OACA,gCACI,iCACI,cAAC,EAAD,CACIF,aARZ,WACIE,GAAUhB,IAQFA,UAAWA,MAGnB,+BACI,cAAC,EAAD,CACIA,UAAWA,UCVZiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAAOC,SACPC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.3f87c1e7.chunk.js","sourcesContent":["import {ChangeEventHandler, forwardRef, MutableRefObject} from \"react\";\n\ninterface Props {\n    type: string,\n    items: {\n        value: string,\n        text: string,\n        disabled: boolean\n    }[]\n}\n\nconst MySelect = forwardRef((props: Props, ref: any) =>  {\n\n    return (\n        <select ref={ref}>\n            {\n                props.items.map((item,index) =>\n                    <option disabled={item.disabled} key={index} value={item.value}>\n                        {item.text}\n                    </option>\n                )\n            }\n        </select>\n    )\n})\n\nexport {MySelect}","import {MySelect} from \"../MySelect/MySelect\";\nimport {ChangeEventHandler, MouseEventHandler, useRef} from \"react\";\n\ninterface Props {\n    changeFilter:(params: { column: string, operator: string, value: string }) => void,\n    changeSearchVal(s: string): void\n}\n\nfunction TaskListPanel(props: Props) {\n    let columnRef = useRef<HTMLSelectElement | null>(null);\n    let operatorRef = useRef<HTMLSelectElement | null>(null);\n    let valueRef = useRef<HTMLInputElement | null>(null);\n\n\n    function applyFilter(event: any) {\n        event.preventDefault();\n\n        if (columnRef && operatorRef && valueRef) {\n            let newFilter = {\n                column: columnRef.current?.value ? columnRef.current?.value : \"\",\n                operator: operatorRef.current?.value ? operatorRef.current?.value : \"\",\n                value: valueRef.current?.value ? valueRef.current?.value : \"\"\n            }\n            console.log(newFilter)\n            props.changeFilter(newFilter)\n        }\n    }\n\n    function resetForm(event: any) {\n        event.preventDefault();\n        props.changeFilter({\n            column: \"\",\n            operator: \"\",\n            value: \"\"\n        })\n\n    }\n\n    function onChangeSearchInput(e: any) {\n        let s:string = e.target.value;\n        props.changeSearchVal(s);\n    }\n\n\n    return (\n        <div>\n            <form id=\"filterForm\" className=\"form\" onSubmit={applyFilter}>\n                <MySelect\n                    type='column'\n                    items={[\n                        {value: \"0\", text: \"-- Столбец --\", disabled: false},\n                        {value: \"id\", text: \"ID\", disabled: false},\n                        {value: \"date\", text: \"Дата\", disabled: false},\n                        {value: \"name\", text: \"Название\", disabled: false},\n                        {value: \"carrier\", text: \"Перевозчик\", disabled: false},\n                        {value: \"tel\", text: \"Телефон\", disabled: false},\n                        {value: \"ATICode\", text: \"ATICode\", disabled: false}\n\n                    ]}\n                    ref={columnRef}\n                />\n                <MySelect\n                    type='column'\n                    items={[\n                        {value: \"0\", text: \"-- Оператор --\", disabled: false},\n                        {value: \"=\", text: \"равно\", disabled: false},\n                        {value: \"~\", text: \"содержит\", disabled: false},\n                        {value: \">\", text: \"больше\", disabled: false},\n                        {value: \"<\", text: \"меньше\", disabled: false}\n\n                    ]}\n                    ref={operatorRef}\n                />\n                <input ref={valueRef} type=\"text\" placeholder=\"Значение фильтра\"/>\n                <button type=\"submit\">Фильтр</button>\n                <button type=\"reset\" onClick={resetForm}>Сбросить</button><br/>\n                Поиск: <input type=\"text\" onChange={onChangeSearchInput} placeholder=\"Поле поиска\"/>\n            </form>\n\n        </div>\n    );\n}\n\nexport default TaskListPanel;\n","import {Filter, Task} from \"../../service/interfaces\";\nimport {useEffect, useState} from \"react\";\n\ninterface Props {\n    tasks: Task[],\n    isAdmin: boolean,\n    changeSort: (params: any) => void,\n    filter: Filter,\n    adminFlag: boolean,\n    saveTask: (task: Task) => void,\n    deleteTask: (task: Task) => void\n}\nfunction TaskListContainer(props: Props) {\n    let tasks = props.tasks;\n    const [editingTask, setEditingTask] = useState<number>(-1)\n\n    tasks.sort((a,b) => {\n        let sign = props.filter.sort.asc ? 1 : -1;\n        let column: string = props.filter.sort.column;\n        // @ts-ignore\n        if (a[column] > b[column]) {\n            return 1*sign\n        } else {\n            // @ts-ignore\n            if (a[column] < b[column]) {\n                return -1*sign\n            } else {\n                return 0\n            }\n        }\n    });\n\n    if (props.filter.filter.column !== '0' && props.filter.filter.operator !== '0' && props.filter.filter.value) {\n        let {column, operator, value} = props.filter.filter;\n        tasks = tasks.filter(task => {\n            if (operator === '=') {\n                // @ts-ignore\n                return (task[column].toString() === value)\n            } else if (operator === '~') {\n                // @ts-ignore\n                return task[column].toString().indexOf(value) > -1;\n            } else if (operator === '>') {\n                // @ts-ignore\n                return (+task[column] > +value)\n            } else if (operator === '<') {\n                // @ts-ignore\n                return (+task[column] < +value)\n            }\n        })\n    }\n\n    if (props.filter.search) {\n        let s = props.filter.search;\n        tasks = tasks.filter(task => (\n            task.id.toString().indexOf(s) > -1\n            || task.date.toString().indexOf(s) > -1\n            || task.name.toString().indexOf(s) > -1\n            || task.carrier.toString().indexOf(s) > -1\n            || task.tel.toString().indexOf(s) > -1\n            || task.ATICode.toString().indexOf(s) > -1\n        ))\n    }\n\n\n    function setSort(e: any) {\n        e.preventDefault()\n        if (e.target.dataset.name) {\n            props.changeSort(e.target.dataset.name);\n        }\n    }\n\n    function onEditBtnClick(e: any) {\n        setEditingTask(+e.target.dataset.id)\n    }\n\n    function submitEditForm(e: any) {\n        e.preventDefault();\n        console.log(e.target.elements)\n        props.saveTask({\n            ...tasks[e.target.elements.index.value],\n            date: e.target.elements.date.value,\n            name: e.target.elements.name.value,\n            carrier: e.target.elements.carrier.value,\n            tel: e.target.elements.tel.value,\n            ATICode: e.target.elements.ATICode.value,\n        })\n        setEditingTask(-1)\n    }\n\n    function onPressDeleteBtn(e: any) {\n        e.preventDefault();\n        props.deleteTask({\n            ...tasks[e.target.dataset.index]})\n        setEditingTask(-1)\n    }\n\n    function closeEditForm(e: any) {\n        e.preventDefault();\n        setEditingTask(-1)\n    }\n\n\n    return (\n        <div>\n            <table>\n                <thead>\n                    <tr>\n                        <th scope=\"col\"><a href=\"/\" onClick={setSort} data-name=\"id\">ID</a></th>\n                        <th scope=\"col\"><a href=\"/\" onClick={setSort} data-name=\"date\">Дата</a></th>\n                        <th scope=\"col\"><a href=\"/\" onClick={setSort} data-name=\"name\">Название</a></th>\n                        <th scope=\"col\"><a href=\"/\" onClick={setSort} data-name=\"carrier\">Перевозчик</a></th>\n                        <th scope=\"col\"><a href=\"/\" onClick={setSort} data-name=\"tel\">Телефон</a></th>\n                        <th scope=\"col\"><a href=\"/\" onClick={setSort} data-name=\"comments\">Комментарии</a></th>\n                        <th scope=\"col\"><a href=\"/\" onClick={setSort} data-name=\"ATICode\">ATI-код</a></th>\n                        <th scope=\"col\">Опции</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {tasks.map((task,index) =>\n                        task.id === +editingTask ? (\n                            <tr key={index}>\n                                <td colSpan={8}>\n                                    <form onSubmit={submitEditForm}>\n                                        <input type=\"text\" name=\"index\" defaultValue={index} disabled={true}/>\n                                        <input type=\"text\" name=\"date\" defaultValue={task.date}/>\n                                        <input type=\"text\" name=\"name\" defaultValue={task.name}/>\n                                        <input type=\"text\" name=\"carrier\" defaultValue={task.carrier}/>\n                                        <input type=\"text\" name=\"tel\" defaultValue={task.tel}/>\n                                        <input type=\"text\" name=\"ATICode\" defaultValue={task.ATICode}/>\n                                        <button type=\"submit\">Сохранить</button><button onClick={closeEditForm}>Закрыть</button>\n                                    </form>\n                                </td>\n                            </tr>\n                        ) : (\n                        <tr key={index}>\n                            <td>{task.id}</td>\n                            <td>{task.date}</td>\n                            <td>{task.name}</td>\n                            <td>{task.carrier}</td>\n                            <td>{task.tel}</td>\n                            <td>{task.comments.map((comment,index) => <p key={`${task.id}-${index}`}>{comment}</p>)}</td>\n                            <td>{task.ATICode}</td>\n                            <td>{props.adminFlag ? (\n                                <div>\n                                    <button onClick={onEditBtnClick} data-id={task.id}>Изменить</button>\n                                    <button onClick={onPressDeleteBtn} data-index={index}>Удалить</button>\n                                </div>\n                                ) : \"\"}\n                            </td>\n                        </tr>\n                        )\n                    )}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default TaskListContainer;\n","import {Task} from \"../service/interfaces\";\n\n\nconst server = process.env.SERVER\n\nconst tasks:Task[] = [\n    {\n        id: 1,\n        date: \"2021-01-02 10:11\",\n        name: \"ООО Ромашка\",\n        carrier: \"Иванов Иван Иванович\",\n        tel: \"79086307477\",\n        comments: [\"Коммент1\", \"Коммент2\", \"Коммент3\"],\n        ATICode: 1785\n    },\n    {\n        id: 5,\n        date: \"2021-03-04 12:13\",\n        name: \"ООО Петрушка\",\n        carrier: \"Петров Петр Петрович\",\n        tel: \"79876543210\",\n        comments: [\"Коммент1\", \"Коммент2\", \"Коммент3\"],\n        ATICode: 6457\n    },\n    {\n        id: 8,\n        date: \"2021-07-08 14:15\",\n        name: \"ООО Капуста\",\n        carrier: \"Иванов Иван Иванович\",\n        tel: \"79086307477\",\n        comments: [\"Коммент1\", \"Коммент2\", \"Коммент3\"],\n        ATICode: 8751\n    },\n    {\n        id: 16,\n        date: \"2021-07-08 16:17\",\n        name: \"ООО Вишня\",\n        carrier: \"Сидоров Сидор Сидорович\",\n        tel: \"79086307471\",\n        comments: [\"Коммент1\", \"Коммент2\", \"Коммент3\"],\n        ATICode: 6547\n    }\n]\n\nfunction getTasks(jwt:string = \"\") {\n    // For test only\n    return tasks;\n\n\n    // return fetch(`${server}/tasks`, {\n    //     method: 'GET',\n    //     headers: {\n    //         'Content-Type': \"application/json\",\n    //         Authorization: jwt,\n    //     }\n    // }).then(result => result.json())\n    // .catch(err => [])\n\n}\n\nfunction patchTask(task:Task, jwt:string = \"\") {\n    return fetch(`${server}/task/edit/${task.id}`, {\n        method: 'PATCH',\n        headers: {\n            Authorization: jwt,\n            'Content-Type': \"application/json\"\n        },\n        body: JSON.stringify(task)\n    })\n\n}\n\nfunction dropTask(task:Task, jwt:string = \"\") {\n    //Comment this\n    return true\n\n    return fetch(`${server}/task/delete/${task.id}`, {\n        method: 'DELETE',\n        headers: {\n            Authorization: jwt,\n            'Content-Type': \"application/json\"\n        },\n        body: JSON.stringify({})\n    })\n\n}\n\nexport {tasks, getTasks, patchTask, dropTask}","import TaskListPanel from \"../TaskListPanel/TaskListPanel\";\nimport TaskListContainer from \"../TaskListContainer/TaskListContainer\";\nimport {Filter, Task} from \"../../service/interfaces\";\nimport {useState} from \"react\";\nimport {dropTask, getTasks, patchTask, tasks} from \"../../middleware/api\";\n\n\ninterface Props {\n    adminFlag: any\n}\n\n\n\nfunction Tasks(props: Props) {\n\n    const [filter, setFilter] = useState<Filter>(\n        {\n            filter: {\n                column: \"\",\n                operator: \"\",\n                value: \"\"\n            },\n            sort: {\n                column: \"date\",\n                asc: true\n            },\n            search: \"\"\n        }\n    )\n\n    const [tasks, setTasks] = useState<Task[]>(fetchTasks())\n\n    function fetchTasks() {\n        return getTasks(\"jwt\")\n    }\n\n\n    //@params = object {column, operator, value}\n    function changeFilter(params: {column: string, operator: string, value: string}) {\n        setFilter (\n            {\n                ...filter,\n                filter: params\n            }\n        )\n        // console.log(filter)\n    }\n\n    function changeSort(column: string) {\n        setFilter(\n            {\n                ...filter,\n                sort: {\n                    column: column,\n                    asc: column === filter.sort.column ? !filter.sort.asc : true\n                },\n            }\n        )\n        //applyFilter();\n    }\n\n    function changeSearchVal(s: string) {\n        setFilter (\n            {\n                ...filter,\n                search: s,\n            }\n        )\n    }\n\n    function saveTask(task: Task) {\n        //let newTask = patchTask(task)\n        let newTask = tasks.find(item => item.id === task.id);\n        if (newTask) {\n            tasks.push(task)\n            setTasks(tasks.filter(item => item !== newTask));\n        }\n    }\n\n    function deleteTask(task: Task) {\n        if (dropTask(task, \"jwt\")) {\n            let newTask = tasks.find(item => item.id === task.id);\n            if (newTask) {\n                setTasks(tasks.filter(item => item.id != task.id));\n            }\n\n        }\n\n    }\n\n    return (\n        <div>\n            <p>Всего заявок: {tasks.length}</p>\n            <TaskListPanel\n                changeFilter={changeFilter}\n                changeSearchVal={changeSearchVal}\n\n            />\n            <TaskListContainer\n                filter={filter}\n                tasks={tasks}\n                isAdmin={false}\n                changeSort={changeSort}\n                adminFlag={props.adminFlag}\n                saveTask={saveTask}\n                deleteTask={deleteTask}\n            />\n        </div>\n    );\n}\n\nexport default Tasks;\n","interface Props {\n    setAdminFlag: () => void;\n    adminFlag: boolean\n}\n\nfunction NavPanel(props: Props) {\n    function onAdminBtnClick(e: any) {\n        e.preventDefault();\n        props.setAdminFlag();\n    }\n\n    let btnText = props.adminFlag ? \"Перейти в пользователя\" : \"Перейти в админку\"\n\n    return <nav>\n        <button onClick={onAdminBtnClick}>{btnText}</button>\n    </nav>;\n}\n\nexport default NavPanel;","import './App.css';\nimport Tasks from \"../Tasks/Tasks\";\nimport {useState} from \"react\";\nimport NavPanel from \"../NavPanel/NavPanel\";\n\nfunction App() {\n    const [adminFlag, setAdmin] = useState(false)\n\n    function setAdminFlag() {\n        setAdmin(!adminFlag);\n    }\n\n    return (\n    <div>\n        <header>\n            <NavPanel\n                setAdminFlag={setAdminFlag}\n                adminFlag={adminFlag}\n            />\n        </header>\n        <main>\n            <Tasks\n                adminFlag={adminFlag}\n            />\n        </main>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport dotenv from 'dotenv';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\ndotenv.config();\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}